{"version":3,"sources":["petitionFetch.js","components/CityConditions.jsx","hooks/useGeoLocation.jsx","components/NavBar.jsx","components/WeatherMap.jsx","components/WeekConditions.jsx","App.js","index.js"],"names":["petitionFetch","fetchUrl","Promise","resolve","reject","fetch","method","headers","mode","then","data","json","CityConditions","location","useState","weatherMeasures","setWeatherMeasures","useEffect","lat","lng","temperature","currently","toFixed","feeling","apparentTemperature","wind","windSpeed","humidity","dewPoint","UV","uvIndex","visibility","pressure","summary","hourly","icon","nextHour","className","style","display","flexDirection","alignItems","src","alt","width","fontSize","map","hour","id","height","paddingRight","unix","format","time","useGeoLocation","loaded","coordinates","setLocation","onSuccess","coords","latitude","longitude","onError","error","navigator","code","message","geolocation","getCurrentPosition","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","typography","align","title","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavBar","gpsLocate","localStorage","getItem","savedLocation","JSON","parse","classes","AppBar","Toolbar","onClick","cursor","justifySelf","InputBase","placeholder","input","inputProps","onKeyPress","event","key","target","value","features","center","setItem","stringify","handleKeyPress","Typography","variant","noWrap","textAlign","WeatherMap","temp","setTemp","centre","L","divIcon","html","Map","zoom","TileLayer","attribution","url","Marker","heading","pxToRem","fontWeight","fontWeightRegular","WeekConditions","weatherWeek","setweatherWeek","daily","day","Accordion","AccordionSummary","expandIcon","aria-controls","temperatureMin","AccordionDetails","disabled","App","city","setCity","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a46f3ba.chunk.js","sourcesContent":["function petitionFetch(fetchUrl) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        fetch(fetchUrl, {\r\n            method: \"GET\",\r\n            headers: {\r\n                mode: \"no-cors\"\r\n            }\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => resolve(data))\r\n    })\r\n}\r\n\r\n\r\nexport default petitionFetch","import React, { useState, useEffect } from \"react\";\r\nimport petitionFetch from \"../petitionFetch.js\";\r\nimport \"../assets/CityConditions.scss\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst CityConditions = ({ location }) => {\r\n  const [weatherMeasures, setWeatherMeasures] = useState(\"\");\r\n  useEffect(() => {\r\n    petitionFetch(\r\n      `https://corsproxybypass.herokuapp.com/https://api.darksky.net/forecast/88030114c5e47763a011a75e7a10c633/${location.lat}, ${location.lng}`\r\n    ).then((data) =>\r\n      setWeatherMeasures({\r\n        temperature: (((data.currently.temperature - 32) * 5) / 9).toFixed(1),\r\n        feeling: (((data.currently.apparentTemperature - 32) * 5) / 9).toFixed(\r\n          1\r\n        ),\r\n        wind: data.currently.windSpeed,\r\n        humidity: data.currently.humidity,\r\n        dewPoint: data.currently.dewPoint,\r\n        UV: data.currently.uvIndex,\r\n        visibility: data.currently.visibility,\r\n        pressure: data.currently.pressure,\r\n        summary: data.hourly.summary,\r\n        icon: data.currently.icon,\r\n        nextHour: data.hourly.data,\r\n      })\r\n    );\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"city-stats\">\r\n        <div>\r\n          || Wind: {weatherMeasures.wind} mph || Humidity:{\" \"}\r\n          {weatherMeasures.humidity * 100}% || Dew Pt:{\" \"}\r\n          {weatherMeasures.dewPoint}˚ || UV Index: {weatherMeasures.UV} ||\r\n          Visibility: {weatherMeasures.visibility} mi || Pressure:{\" \"}\r\n          {weatherMeasures.pressure} mb ||\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <img\r\n              src={`https://darksky.net/images/weather-icons/${weatherMeasures.icon}.png`}\r\n              alt=\"weather Icon\"\r\n              style={{ width: \"60px\" }}\r\n            />\r\n            <div style={{ fontSize: \"32px\" }}>\r\n              {weatherMeasures.temperature}°\r\n            </div>\r\n          </div>\r\n          Feels Like: {weatherMeasures.feeling}°\r\n        </div>\r\n        <br />\r\n\r\n        <span style={{ fontSize: \"28px\" }}>{weatherMeasures.summary}</span>\r\n        <br />\r\n\r\n        <div className=\"hour-weather\">\r\n          {weatherMeasures.nextHour?.map((hour, id) => (\r\n            <div style={{ width: \"200px\" }} key={id}>\r\n              <div style={{ width: \"100%\", height: \"20px\" }}>\r\n                <img\r\n                  src={`https://darksky.net/images/weather-icons/${hour.icon}.png`}\r\n                  alt=\"weather Icon\"\r\n                  style={{ width: \"20px\" }}\r\n                />\r\n              </div>\r\n              <div style={{ paddingRight: \"20px\" }}>\r\n                <Moment unix format=\"HH\">\r\n                  {hour.time}\r\n                </Moment>\r\n                :00\r\n                <br />\r\n              </div>\r\n              <span>{(((hour.temperature - 32) * 5) / 9).toFixed(1)}°</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CityConditions;\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst useGeoLocation = () => {\r\n  const [location, setLocation] = useState({\r\n    loaded: false,\r\n    coordinates: { lat: \"\", lng: \"\" },\r\n  });\r\n  const onSuccess = (location) => {\r\n    setLocation({\r\n      loaded: true,\r\n      coordinates: {\r\n        lat: location.coords.latitude,\r\n        lng: location.coords.longitude,\r\n      },\r\n    });\r\n  };\r\n  const onError = (error) => {\r\n    setLocation({\r\n      loaded: true,\r\n      error,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (!(\"geolocation\" in navigator)) {\r\n      onError({\r\n        code: 0,\r\n        message: \"Geolocation not supported\",\r\n      });\r\n    }\r\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n  }, []);\r\n\r\n  return location;\r\n};\r\n\r\nexport default useGeoLocation;\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport GpsFixed from \"@material-ui/icons/GpsFixed\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport petitionFetch from \"../petitionFetch\";\r\nimport useGeoLocation from \"../hooks/useGeoLocation\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  typography: {\r\n    align: \"center\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    marginRight: theme.spacing(2),\r\n    align: \"justify\",\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavBar = ({ setLocation }) => {\r\n  const gpsLocate = useGeoLocation();\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"lastLocation\")) {\r\n      let savedLocation = JSON.parse(localStorage.getItem(\"lastLocation\"));\r\n      setLocation(savedLocation);\r\n    } else {\r\n      setLocation({\r\n        lat: 36.115778036660316,\r\n        lng: -115.17280731388223,\r\n      });\r\n    }\r\n  }, [setLocation]);\r\n\r\n  const handleKeyPress = (event) => {\r\n    petitionFetch(\r\n      `https://api.mapbox.com/geocoding/v5/mapbox.places/${event.target.value}.json?access_token=pk.eyJ1Ijoiam9uYXRoeiIsImEiOiJja3FkYmxqeTYxMThyMnBzN3IxZzV1NjY3In0.HpVGfj3JG4CfaxCzpYLn_g`\r\n    ).then((data) => {\r\n      setLocation({\r\n        lat: data.features[0].center[1],\r\n        lng: data.features[0].center[0],\r\n      });\r\n      localStorage.setItem(\r\n        \"lastLocation\",\r\n        JSON.stringify({\r\n          lat: data.features[0].center[1],\r\n          lng: data.features[0].center[0],\r\n        })\r\n      );\r\n    });\r\n  };\r\n  const handleGeolocate = () => {\r\n    setLocation({\r\n      lat: gpsLocate.coordinates.lat,\r\n      lng: gpsLocate.coordinates.lng,\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <AppBar>\r\n        <Toolbar>\r\n          <GpsFixed onClick={handleGeolocate} style={{ cursor: \"pointer\" }} />\r\n          <div\r\n            display=\"flex\"\r\n            className={classes.search}\r\n            style={{ display: \"flex\", justifySelf: \"center\" }}\r\n          >\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyPress={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  handleKeyPress(event);\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{ display: \"flex\", justifyContent: \"center\", width: \"100\" }}\r\n          >\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              style={{ width: \"80vw\", textAlign: \"center\" }}\r\n            >\r\n              GPS Weather\r\n            </Typography>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\nimport petitionFetch from \"../petitionFetch.js\";\r\n\r\nconst WeatherMap = ({ location }) => {\r\n  const [temp, setTemp] = useState(\"\");\r\n  useEffect(() => {\r\n    petitionFetch(\r\n      `https://corsproxybypass.herokuapp.com/https://api.darksky.net/forecast/88030114c5e47763a011a75e7a10c633/${location.lat}, ${location.lng}`\r\n    ).then((data) =>\r\n      setTemp((((data.currently?.temperature - 32) * 5) / 9).toFixed(1))\r\n    );\r\n  }, [location]);\r\n  var centre = L.divIcon({\r\n    className: \"leaflet-div-icon2\",\r\n    html: `<span>${temp}°</span>`,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Map center={{ lat: location.lat, lng: location.lng }} zoom={13}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={[location.lat, location.lng]} icon={centre}></Marker>\r\n      </Map>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherMap;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport petitionFetch from \"../petitionFetch\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nexport default function WeekConditions({ location }) {\r\n  const classes = useStyles();\r\n  const [weatherWeek, setweatherWeek] = useState([]);\r\n  useEffect(() => {\r\n    petitionFetch(\r\n      `https://corsproxybypass.herokuapp.com/https://api.darksky.net/forecast/88030114c5e47763a011a75e7a10c633/${location.lat}, ${location.lng}`\r\n    ).then((data) => setweatherWeek(data.daily.data));\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <p style={{ textAlign: \"center\", fontSize: \"24px\" }}>\r\n        Weather conditions for the next Week\r\n      </p>\r\n\r\n      {weatherWeek?.map((day, id) => (\r\n        <Accordion key={id}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <Typography className={classes.heading}>\r\n              <img\r\n                src={`https://darksky.net/images/weather-icons/${day.icon}.png`}\r\n                alt=\"weather Icon\"\r\n                style={{ width: \"20px\", marginRight: \"10px\" }}\r\n              />\r\n              <Moment unix format=\"dddd\">\r\n                {day.time}\r\n              </Moment>{\" \"}\r\n              :\r\n              <span>\r\n                {\" \"}\r\n                Min:{(((day.temperatureMin - 32) * 5) / 9).toFixed(1)}°{\" \"}\r\n              </span>\r\n              ||{\" \"}\r\n              <span>\r\n                {\" \"}\r\n                Max:{(((day.temperatureMin - 32) * 5) / 9).toFixed(1)}°{\" \"}\r\n              </span>\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div>\r\n              <p style={{ fontWeight: 800 }}>Wind:</p> {day.windSpeed} mph{\" \"}\r\n              <br />\r\n              <p style={{ fontWeight: 800 }}>Humidity:</p> {day.humidity * 100}%{\" \"}\r\n              <br />\r\n              <p style={{ fontWeight: 800 }}>Dew Point:</p> {day.dewPoint}{\" \"}\r\n              <br />\r\n              <p style={{ fontWeight: 800 }}>UV Index:</p> {day.uvIndex} <br />\r\n              <p style={{ fontWeight: 800 }}>Visibility:</p> {day.visibility} mi{\" \"}\r\n              <br />\r\n              <p style={{ fontWeight: 800 }}>Pressure:</p> {day.pressure} mb{\" \"}\r\n              <br />\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n      <Accordion disabled>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3a-content\"\r\n          id=\"panel3a-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            Disabled Accordion\r\n          </Typography>\r\n        </AccordionSummary>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport CityConditions from \"./components/CityConditions\";\nimport NavBar from \"./components/NavBar\";\nimport WeatherMap from \"./components/WeatherMap\";\nimport WeekConditions from \"./components/WeekConditions.jsx\";\n\nfunction App() {\n  const [city, setCity] = useState({\n    lat: \"4.605575533040425\",\n    lng: \"-74.10191003067288\",\n  });\n  return (\n    <div className=\"App\">\n      <NavBar setLocation={setCity} />\n      <CityConditions location={city} />\n      <WeatherMap location={city} />\n      <WeekConditions location={city} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}